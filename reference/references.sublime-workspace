{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 207.0,
		"last_filter": "insta",
		"selected_items":
		[
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Install Package Control"
			]
		],
		"width": 557.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"ls",
			"pwd",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/zengxiang/LightGBM/examples/binary_classification/README.md",
		"/Users/zengxiang/LightGBM/src/objective/binary_objective.hpp",
		"/Users/zengxiang/LightGBM/src/boosting/boosting.cpp",
		"/Users/zengxiang/LightGBM/src/application/application.cpp",
		"/Users/zengxiang/LightGBM/src/boosting/gbdt.cpp",
		"/Users/zengxiang/LightGBM/src/boosting/gbdt.h",
		"/Users/zengxiang/LightGBM/include/LightGBM/tree.h",
		"/Users/zengxiang/LightGBM/src/io/tree.cpp",
		"/Users/zengxiang/LightGBM/src/treelearner/serial_tree_learner.cpp",
		"/Users/zengxiang/LightGBM/src/treelearner/serial_tree_learner.h",
		"/Users/zengxiang/LightGBM/include/LightGBM/config.h",
		"/Users/zengxiang/LightGBM/examples/binary_classification/binary.train",
		"/Users/zengxiang/LightGBM/examples/binary_classification/train.conf",
		"/Users/zengxiang/LightGBM/src/boosting/score_updater.hpp",
		"/Users/zengxiang/LightGBM/include/LightGBM/dataset.h",
		"/Users/zengxiang/LightGBM/src/main.cpp",
		"/Users/zengxiang/LightGBM/include/LightGBM/application.h",
		"/Users/zengxiang/LightGBM/include/LightGBM/boosting.h",
		"/Users/zengxiang/LightGBM/include/LightGBM/tree_learner.h",
		"/Users/zengxiang/LightGBM/include/LightGBM/utils/openmp_wrapper.h",
		"/Users/zengxiang/LightGBM/src/objective/regression_objective.hpp",
		"/Users/zengxiang/LightGBM/src/objective/objective_function.cpp",
		"/Users/zengxiang/LightGBM/include/LightGBM/objective_function.h",
		"/Users/zengxiang/LightGBM/src/treelearner/tree_learner.cpp",
		"/Users/zengxiang/LightGBM/examples/multiclass_classification/train.conf",
		"/Users/zengxiang/LightGBM/src/c_api.cpp",
		"/Users/zengxiang/LightGBM/src/treelearner/leaf_splits.hpp",
		"/Users/zengxiang/LightGBM/src/treelearner/data_partition.hpp",
		"/Users/zengxiang/LightGBM/src/io/bin.cpp",
		"/Users/zengxiang/LightGBM/src/treelearner/data_parallel_tree_learner.cpp",
		"/Users/zengxiang/LightGBM/src/treelearner/parallel_tree_learner.h",
		"/Users/zengxiang/LightGBM/src/boosting/dart.hpp",
		"/Users/zengxiang/LightGBM/src/application/predictor.hpp",
		"/Users/zengxiang/LightGBM/src/treelearner/feature_histogram.hpp",
		"/Users/zengxiang/LightGBM/include/LightGBM/feature.h",
		"/Users/zengxiang/LightGBM/src/treelearner/feature_parallel_tree_learner.cpp",
		"/Users/zengxiang/LightGBM/pmml/README.md",
		"/Users/zengxiang/LightGBM/src/treelearner/split_info.hpp",
		"/Users/zengxiang/LightGBM/include/LightGBM/bin.h",
		"/Users/zengxiang/LightGBM/src/treelearner/voting_parallel_tree_learner.cpp",
		"/Users/zengxiang/LightGBM/include/LightGBM/utils/array_args.h",
		"/Users/zengxiang/LightGBM/src/objective/multiclass_objective.hpp",
		"/Users/zengxiang/LightGBM/include/LightGBM/utils/common.h",
		"/Users/zengxiang/LightGBM/include/LightGBM/network.h",
		"/Users/zengxiang/LightGBM/src/network/network.cpp",
		"/Users/zengxiang/LightGBM/src/network/linkers.h",
		"/Users/zengxiang/LightGBM/src/io/metadata.cpp",
		"/Users/zengxiang/LightGBM/include/LightGBM/export.h",
		"/Users/zengxiang/LightGBM/build/cmake-3.7.2/Source/cm_auto_ptr.hxx",
		"/Users/zengxiang/Library/Application Support/Sublime Text 3/Packages/CTags/CTags.sublime-settings",
		"/Users/zengxiang/Library/Application Support/Sublime Text 3/Packages/User/CTags.sublime-settings",
		"/Users/zengxiang/Desktop/merge_price_cnt.py",
		"/Users/zengxiang/Downloads/LocalRLTest/LocalRLTest.iml",
		"/Users/zengxiang/Downloads/LocalRLTest/src/rlPackage/DPGTest.java",
		"/Users/zengxiang/Downloads/双11纸质书1.tex",
		"/Users/zengxiang/Downloads/双11纸质书.tex",
		"/Users/zengxiang/Desktop/上半年简单总结"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"sigmoid = ",
			"KeyAliasTransform",
			"sigmo",
			"iter",
			"ResetTrainingData",
			"iter_",
			"train_score_updater_ =",
			"num_score",
			"num",
			"object_function",
			"obj",
			"sig",
			"si'g",
			"new_tree",
			"num_class",
			"num_class_",
			"class",
			"num",
			"NAN",
			"get",
			"ge't",
			"MPI",
			"SendRecv",
			"nick",
			"user"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 100.0
	},
	"pinned_build_system": "",
	"project": "references.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 344.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
